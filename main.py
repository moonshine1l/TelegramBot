import random

import requests
import telebot
import logging
import pyjokes
from googletrans import Translator

from telebot import types

API_TOKEN = '5907573151:AAE3qQcrIdV1Al52EOEYQ4QFcVMQ9tG5phY'

bot = telebot.TeleBot(API_TOKEN)
telebot.logger.setLevel(logging.INFO)

storage = dict()

translator = Translator()


def init_storage(user_id):
    storage[user_id] = dict(attempt=None, random_digit=None)


def set_data_storage(user_id, key, value):
    storage[user_id][key] = value


def get_data_storage(user_id):
    return storage[user_id]


@bot.message_handler(commands=['start'])
def command_start(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç) \n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–¥–Ω—è—Ç—å —Ç–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help ")


@bot.message_handler(commands=['help'])
def command_help(message):
    bot.send_message(message.chat.id,
                     "/numbers - –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ \n/rockPaperScissors - –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ \n/cat - —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –∫–æ—Ç–∏–∫–∞!")


@bot.message_handler(commands=['cat'])
def command_joke(message):
    stickers = ['CAACAgIAAxkBAAEIZA9kJh__l6fJR0D5PyLUpNR_roQtXAAC-hYAAn1r2Ut65pmScEboGC8E', 'CAACAgIAAxkBAAEIZBFkJiAHUxP0Q-doWXp_2gzWXKrsgwACYBsAApueiUjjNxm8QnKxFS8E', 'CAACAgIAAxkBAAEIZA1kJh_0Tz6-Mx_1EVyctTFAL8-3HwACnRQAAvoa2EsPDH0ubFMNKC8E', 'CAACAgIAAxkBAAEIZBNkJiBsr-ykXg8XNg7Ku7HsHewcYQACrSUAAkNruUnV0eYl-TGYoS8E', 'CAACAgIAAxkBAAEIZBVkJiB_SXcQ4CIhR62b52QkI3jbMgACtBUAAtIFyEvEgZTnl4Z7ay8E', 'CAACAgIAAxkBAAEIZBdkJiCOBIVv1_FXz55LT1nj0GtxmQACXxYAAgq6yUsjtyMt_mlHPi8E', 'CAACAgQAAxkBAAEIZBlkJiCoQZ8fivg_y_wc2qwYfMoLCgACOgADzjkIDWhSWwg2l986LwQ', 'CAACAgIAAxkBAAEIZBtkJiFU8XSS1YLCFIQk_YvsSEwgUwACwBYAAue6yEl3RpwBVx61_y8E', 'CAACAgIAAxkBAAEIZB1kJiFnjbM6SP7TvlNvCs2DA91D9wACnRUAAv0jQEhsZsXBxjMR1C8E', 'CAACAgIAAxkBAAEIZB9kJiF04NiNBBY6QT44TrHsAs_KIgAC2BIAAhS7OUi0ifTH5oLybS8E', 'CAACAgIAAxkBAAEIZCFkJiGJDkP-5lW5VO3cLbju2bxa7wAC6RcAApPEQUgKY9An4pR4RC8E', 'CAACAgIAAxkBAAEIZCNkJiGWgy2DWjhOemzXYD3UYp1LDgACFhMAAou-QEiilDSZ9FgpUC8E']
    bot.send_sticker(message.chat.id, random.choice(stickers))


@bot.message_handler(commands=['numbers'])
def digitgames(message):
    init_storage(message.chat.id)

    attempt = 5
    set_data_storage(message.chat.id, "attempt", attempt)

    bot.send_message(message.chat.id, f'–ò–≥—Ä–∞ "—É–≥–∞–¥–∞–π —á–∏—Å–ª–æ"!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {attempt}')

    random_digit = random.randint(1, 10)
    print(random_digit)

    set_data_storage(message.chat.id, "random_digit", random_digit)
    print(get_data_storage(message.chat.id))

    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ! –ó–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10!')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
    bot.register_next_step_handler(message, process_digit_step)


def process_digit_step(message):
    user_digit = message.text

    if not user_digit.isdigit():
        msg = bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —Ü–∏—Ñ—Ä—ã, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ü–∏—Ñ—Ä—ã')
        bot.register_next_step_handler(msg, process_digit_step)
        return

    attempt = get_data_storage(message.chat.id)["attempt"]
    random_digit = get_data_storage(message.chat.id)["random_digit"]

    if int(user_digit) == random_digit:
        bot.send_message(message.chat.id, f'–£—Ä–∞! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ! –≠—Ç–æ –±—ã–ª–∞ —Ü–∏—Ñ—Ä–∞: {random_digit}')
        init_storage(message.chat.id)
        return
    elif attempt > 1:
        attempt -= 1
        set_data_storage(message.chat.id, "attempt", attempt)
        bot.send_message(message.chat.id, f'–ù–µ–≤–µ—Ä–Ω–æ, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {attempt}')
        bot.register_next_step_handler(message, process_digit_step)
    else:
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!')
        init_storage(message.chat.id)
        return


@bot.message_handler(commands=['rockPaperScissors'])
def game_start(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞–º–µ–Ω—åü§ú')
    btn2 = types.KeyboardButton('–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è')
    btn3 = types.KeyboardButton('–ë—É–º–∞–≥–∞‚úã')
    keyboard.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '–ö–∞–º–µ–Ω—åü§ú, –Ω–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è, –±—É–º–∞–≥–∞‚úã, —Ä–∞–∑, –¥–≤–∞, —Ç—Ä–∏! –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ—Å—Ç:',
                     reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def game(message):
    choice = random.choice(['–ö–∞–º–µ–Ω—åü§ú', '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è', '–ë—É–º–∞–≥–∞‚úã'])
    if message.text == choice:
        bot.send_message(message.chat.id, '–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è!  –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors')
        return
    else:
        if message.text == '–ö–∞–º–µ–Ω—åü§ú':
            if choice == '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è':
                bot.send_message(message.chat.id,
                                 '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.  –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))
            else:
                bot.send_message(message.chat.id,
                                 '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è –±—ã–ª(–∏/a) {}.  –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))

        elif message.text == '–ù–æ–∂–Ω–∏—Ü—ã‚úåÔ∏è':
            if choice == '–ë—É–º–∞–≥–∞‚úã':
                bot.send_message(message.chat.id,
                                 '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))
            else:
                bot.send_message(message.chat.id,
                                 '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è –±—ã–ª(–∏/a) {}.  –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))
        elif message.text == '–ë—É–º–∞–≥–∞‚úã':
            if choice == '–ö–∞–º–µ–Ω—åü§ú':
                bot.send_message(message.chat.id,
                                 '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π! –£ –º–µ–Ω—è –±—ã–ª–∞ {}.  –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))
            else:
                bot.send_message(message.chat.id,
                                 '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢. –£ –º–µ–Ω—è –±—ã–ª(–∏/a) {}. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –ø–∏—à–∏—Ç–µ /rockPaperScissors'.format(
                                     choice))
        return


if __name__ == '__main__':
    bot.skip_pending = True
    bot.polling()
